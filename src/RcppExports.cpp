// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// extendMatrix
NumericMatrix extendMatrix(NumericMatrix mat, int h);
RcppExport SEXP _hicrep_extendMatrix(SEXP matSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(extendMatrix(mat, h));
    return rcpp_result_gen;
END_RCPP
}
// estimateLengthOrWidth
int estimateLengthOrWidth(int x, int nrow, int h);
RcppExport SEXP _hicrep_estimateLengthOrWidth(SEXP xSEXP, SEXP nrowSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(estimateLengthOrWidth(x, nrow, h));
    return rcpp_result_gen;
END_RCPP
}
// fastMeanFilter
NumericMatrix fastMeanFilter(NumericMatrix mat, int h);
RcppExport SEXP _hicrep_fastMeanFilter(SEXP matSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(fastMeanFilter(mat, h));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hicrep_extendMatrix", (DL_FUNC) &_hicrep_extendMatrix, 2},
    {"_hicrep_estimateLengthOrWidth", (DL_FUNC) &_hicrep_estimateLengthOrWidth, 3},
    {"_hicrep_fastMeanFilter", (DL_FUNC) &_hicrep_fastMeanFilter, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_hicrep(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
